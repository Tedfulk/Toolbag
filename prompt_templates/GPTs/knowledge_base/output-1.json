[
  {
    "title": "Developer Quickstart - Builder.io",
    "url": "https://www.builder.io/c/docs/quickstart",
    "html": "Made in Builder.io Explore our new demo library Product Solutions Developers Pricing Resources Talk to Us Sign Up ⌘K Start Here Building Content Developer Docs Developing with Builder Devtools: Automated Integration Quickstart Integrating Pages Integrating Sections Integrating Structured Data Integrating Symbols Integrating Custom Components How Builder Works Models Preview URLs API Keys API Connecting API Data Custom Data Custom Code Generating Code Scripting the Visual Editor Plugins SDK Comparison SEO Targeting Tracking & Dashboards Widgets Framework Resources Enterprise Hub Account Blueprints NEW Developer Quickstart This Quickstart shows how to integrate page building with Builder.io in a brief format. We recommend this as the best way to get started with the Builder platform. Tip: This Quickstart moves at a fast pace to get you up and going as quickly as possible, so it assumes development proficiency and workflow familiarity. For more detailed, step-by-step instructions, see Integrating Pages. Prerequisites To get the most out of this guide, you should have: A working app in the framework of your choice. Create an app if you don't already have one. A basic understanding of development including the command line, npm, and code for your framework. A Builder Space. Step 1: Add Builder as a dependency Next App Router Qwik Swift React Remix Hydrogen Nuxt Vue Svelte Gatsby Angular REST API At the command line, use npm to install the Builder SDK: npm install @builder.io/react Start the development server: npm start Tip: On Windows, be sure to use quoting when you install dependencies that use the @ operator; for example, npm install \"@builder.io/react\". Step 2: Add a Builder component to your app Next App Router Qwik Swift React Remix Hydrogen Nuxt Vue Svelte Gatsby Angular REST API Paste the following code into your JavaScript, making sure to replace YOUR\\\\\\\\\\\\\\_API\\\\\\\\\\\\\\_KEY with your Public API Key, which you can find in the Account section of Builder or by pressing Cmd/Ctrl+k and filtering for \"API\". import { useEffect, useState } from \"react\"; import { BuilderComponent, builder, useIsPreviewing } from \"@builder.io/react\"; // Put your API key here builder.init(YOUR\\\\\\\\\\\\\\_API\\\\\\\\\\\\\\_KEY); // set whether you're using the Visual Editor, // whether there are changes, // and render the content if found export default function CatchAllRoute() { const isPreviewingInBuilder = useIsPreviewing(); const \\\\\\\\\\\\\\[notFound, setNotFound\\\\\\\\\\\\\\] = useState(false); const \\\\\\\\\\\\\\[content, setContent\\\\\\\\\\\\\\] = useState(null); // get the page content from Builder useEffect(() => { async function fetchContent() { const content = await builder .get(\"page\", { url: window.location.pathname }) .promise(); setContent(content); setNotFound(!content); // if the page title is found, // set the document title if (content?.data.title) { document.title = content.data.title } } fetchContent(); }, \\\\\\\\\\\\\\[window.location.pathname\\\\\\\\\\\\\\]); // If no page is found, return // a 404 page from your code. // The following hypothetical // is placeholder. if (notFound && !isPreviewingInBuilder) { return } // return the page when found return ( <> {/\\\\\\\\\\\\\\* Render the Builder page \\\\\\\\\\\\\\*/} ); } Using your app in Builder's Visual Editor Go to the Models section in Builder and choose your Page model. Set the Preview URL to http://localhost:YOUR\\\\\\\\\\\\\\_PORT where YOUR\\\\\\\\\\\\\\_PORT is the port number for your app. Be sure to include the http://. Click Save. In the Content section of Builder, create a new blank Page and name it something like Test Page. Add some minimal content, such as a Text block with some copy such as \"I did it!\". Click the Publish button. Go to http://localhost:3000/test-page, where test-page is the name you gave your page, and check out your work. Well done! The next video shows this process, including getting your API Key as described in the last section: If you're getting a 404 but aren't sure why, check these things: Make sure you've published your page in Builder by clicking the Publish button on the upper right corner. Check the URL. If you name the page test2 for example, Builder adds a hyphen, so that the URL segment is test-2. For a community example with Builder and Next.js that includes ISR capabilities and SEO optimizations, see Kenzitron's Builder.IO & NextJs starter with ISR & SEO optimization on GitHub. What's next With your app and Builder working together, the next step is the fun part–add some pages in Builder and drag in some elements. Play with styles and explore the UI. Use your custom components in Builder To use your own components in the Visual Editor, including replacing built-in blocks, see Integrating Custom Components. Start using custom components Deploy your updated app to a preview environment Give others a way to try the Visual Editor integrated with your site. Deploy to a preview env For more examples of what you can do with Builder, check out the Blueprints, which cover varied use cases at a high-level with code examples. Looking to hire a third party to help with your project? Submit a project request and our partnerships team will reach out to connect you with an Expert from our partner ecosystem. Connect with us Was this article helpful? 😞 😐 😃 ON THIS PAGE Prerequisites Step 1: Add Builder as a dependency Step 2: Add a Builder component to your app Using your app in Builder's Visual Editor What's next What can we improve? Your feedback helps us improve our documentation. Give feedback Get the latest from Builder.io Developer Newsletter Latest tips, tricks, and news for frontend developers from our blog Product Newsletter Latest features and updates on the Builder.io platform By submitting, you agree to our Privacy Policy PRODUCT Visual Copilot Beta Visual Headless CMS Integrations What's New COMPANY About Careers DEVELOPERS Builder for Developers Documentation Devtools Try Builder Playground OPEN SOURCE Builder Mitosis Qwik Partytown SOLUTIONS Ecommerce Marketing Sites Landing Pages Mobile Apps Multi-brand Headless CMS POPULAR GUIDES SaaS Marketing Site Ebook Composable Commerce Ebook Headless CMS Guide Headless Commerce Guide Design to Code RESOURCES Blog Knowledge Base Community Forum Partners Performance Insights Templates Success Stories Showcase Demo Library CMS > FRAMEWORKS React Next.js Qwik Gatsby Angular Vue Svelte Remix Nuxt Hydrogen Visually build and optimize digital experiences on any tech stack. No coding required, and developer approved. Get Started Log In © 2024 Builder.io, Inc. Security Privacy Policy SaaS Terms"
  },
  {
    "title": "Using Builder Devtools for Automated Integration - Builder.io",
    "url": "https://www.builder.io/c/docs/devtools",
    "html": "Made in Builder.io Explore our new demo library Product Solutions Developers Pricing Resources Talk to Us Sign Up ⌘K Start Here Building Content Developer Docs Developing with Builder Devtools: Automated Integration Quickstart Integrating Pages Integrating Sections Integrating Structured Data Integrating Symbols Integrating Custom Components How Builder Works Models Preview URLs API Keys API Connecting API Data Custom Data Custom Code Generating Code Scripting the Visual Editor Plugins SDK Comparison SEO Targeting Tracking & Dashboards Widgets Framework Resources Enterprise Hub Account Blueprints NEW Using Builder Devtools for Automated Integration in beta You can skip manual integration and let Builder's Devtools handle the details for you. Builder Devtools automatically handles integration with Builder's Visual Headless CMS and provides an intuitive UI for registering components and managing content. Currently, Builder Devtools supports integration with Next.js, and Qwik. Need another framework? While we add more frameworks, refer to the Developer Quickstart to integrate with other frameworks. Prerequisites Make sure you have Node.js and npm (Node Package Manager) installed on your system. Create an app if you don't already have one Generate an app and cd into the new app's directory by running the following command at the command line, where my-next-app or my-qwik-app is the name you give your app: Next Qwik npx create-next-app my-next-app cd my-next-app Install Builder Devtools This command automatically sets up the integration with Builder, connects to your Builder account, and adds your API key. In the root of your project, run the following command to install Builder Devtools: npm init builder.io@latest When prompted, respond Yes to integrating with Builder.io: Start the development server After installing Builder Devtools, start your development server: npm run dev Access the Builder Devtools UI With the development server running, access the Builder Devtools UI: Open your web browser and navigate to your project's local development URL—usually http://localhost:3000/ for Next.js or http://localhost:5173/ for Qwik. Click the Let's get started button. Choose a Space to authorize for integration and click Authorize. Click the Go to your app button. On the bottom right, click on the Builder logo to get to your components, settings, and adding a Builder Page. Tip: If you're using Windows, you might need to restart your dev server. The video below shows authorizing and connecting to a Builder Space. Register components The Devtools drawer displays all of your components, both registered and unregistered. From here, you can: Register components: toggle components on to register them with Builder. View and edit registered components: Interact with your registered components directly from the Devtools UI. You can rename, register, and edit inputs. Visualize content: Display content that's in Builder and click on an overlay to jump into any Builder element directly in the Visual Editor. To register your components with Builder: Open the Devtools drawer by clicking on the Builder logo on the bottom right. Click Components to display all of the components, registered or not, in your code base. Select a component. Toggle on to register the component. The code to register the component is added automatically to your code. The next video shows this process by registering a Counter component: The next video shows registering a component and editing its name in Devtools. At the end of the video, notice that the Devtools edit that changes the component's name from Footer to MyFooter, updates in the code editor. Tip: When registering components, Devtools can recognize most input types; however, more complex types require manual coding. If you want to add lists and objects, read about them in Input Types in Builder. Share your feedback Devtools is under active development, and we'd love to know what you think. Your feedback helps us meet the real world needs of Builder's community and we couldn't do it without you! What's next For more detailed information on registering custom components in Builder, read Integrating Custom Components. Looking to hire a third party to help with your project? Submit a project request and our partnerships team will reach out to connect you with an Expert from our partner ecosystem. Connect with us Was this article helpful? 😞 😐 😃 ON THIS PAGE Prerequisites Create an app if you don't already have one Install Builder Devtools Start the development server Access the Builder Devtools UI Register components Share your feedback What's next What can we improve? Your feedback helps us improve our documentation. Give feedback Get the latest from Builder.io Developer Newsletter Latest tips, tricks, and news for frontend developers from our blog Product Newsletter Latest features and updates on the Builder.io platform By submitting, you agree to our Privacy Policy PRODUCT Visual Copilot Beta Visual Headless CMS Integrations What's New COMPANY About Careers DEVELOPERS Builder for Developers Documentation Devtools Try Builder Playground OPEN SOURCE Builder Mitosis Qwik Partytown SOLUTIONS Ecommerce Marketing Sites Landing Pages Mobile Apps Multi-brand Headless CMS POPULAR GUIDES SaaS Marketing Site Ebook Composable Commerce Ebook Headless CMS Guide Headless Commerce Guide Design to Code RESOURCES Blog Knowledge Base Community Forum Partners Performance Insights Templates Success Stories Showcase Demo Library CMS > FRAMEWORKS React Next.js Qwik Gatsby Angular Vue Svelte Remix Nuxt Hydrogen Visually build and optimize digital experiences on any tech stack. No coding required, and developer approved. Get Started Log In © 2024 Builder.io, Inc. Security Privacy Policy SaaS Terms"
  },
  {
    "title": "Builder.io docs - Builder.io",
    "url": "https://www.builder.io/c/docs/intro",
    "html": "Made in Builder.io Explore our new demo library Product Solutions Developers Pricing Resources Talk to Us Sign Up Start Here Building Content Developer Docs Enterprise Hub Account Blueprints NEW Builder Knowledge Base ⌘K Getting Started with the Visual Editor Learn your way around the Visual Editor while building a stunning landing page Go to the Developer Docs Learn how to integrate Builder with your code base and unlock your team's potential Visual Editor Tutorials For tutorials and guides on creating Pages, Sections, and using data in Builder's Visual Editor, check out Start Building. Looking to hire a third party to help with your project? Submit a project request and our partnerships team will reach out to connect you with an Expert from our partner ecosystem. Connect with us Was this article helpful? 😞 😐 😃 Get the latest from Builder.io Developer Newsletter Latest tips, tricks, and news for frontend developers from our blog Product Newsletter Latest features and updates on the Builder.io platform By submitting, you agree to our Privacy Policy PRODUCT Visual Copilot Beta Visual Headless CMS Integrations What's New COMPANY About Careers DEVELOPERS Builder for Developers Documentation Devtools Try Builder Playground OPEN SOURCE Builder Mitosis Qwik Partytown SOLUTIONS Ecommerce Marketing Sites Landing Pages Mobile Apps Multi-brand Headless CMS POPULAR GUIDES SaaS Marketing Site Ebook Composable Commerce Ebook Headless CMS Guide Headless Commerce Guide Design to Code RESOURCES Blog Knowledge Base Community Forum Partners Performance Insights Templates Success Stories Showcase Demo Library CMS > FRAMEWORKS React Next.js Qwik Gatsby Angular Vue Svelte Remix Nuxt Hydrogen Visually build and optimize digital experiences on any tech stack. No coding required, and developer approved. Get Started Log In © 2024 Builder.io, Inc. Security Privacy Policy SaaS Terms"
  },
  {
    "title": "Builder.io developer docs - Builder.io",
    "url": "https://www.builder.io/c/docs/developers",
    "html": "Made in Builder.io Explore our new demo library Product Solutions Developers Pricing Resources Talk to Us Sign Up ⌘K Start Here Building Content Developer Docs Developing with Builder Devtools: Automated Integration Quickstart Integrating Pages Integrating Sections Integrating Structured Data Integrating Symbols Integrating Custom Components How Builder Works Models Preview URLs API Keys API Connecting API Data Custom Data Custom Code Generating Code Scripting the Visual Editor Plugins SDK Comparison SEO Targeting Tracking & Dashboards Widgets Framework Resources Enterprise Hub Account Blueprints NEW LET'S BUILD TOGETHER Developing with Builder Get building with Builder's Visual Headless CMS! Automatic Integration with Devtools INTEGRATE WITH YOUR CODE Integrate Page Building Integrate Section Building Integrate Structured Data Which should I use? Builder Blueprints Blueprints are quick references for common use cases with Builder. Landing pages Blog Article Hero Section Navigation Links Announcement Bar Product Details Product Editorial Homepage Request a Blueprint DIVE DEEPER Integrate Custom Components Learn About Content Models Extend Builder with Plugins EXPLORE THE BUILDER PLAYGROUND: Explore a Builder Integration in Your Browser POPULAR DEVELOPER DOCS How Builder Works: Technical Overview API Documentation Generating Code with Visual Copilot Integrate Symbols We ❤️ open source Builder Builder SDKs, plugins, examples, and more Stars Qwik Resumable framework for building instant-on web apps with great time-to-interactive Stars Mitosis Universal components compiler. Write components once, run everywhere. Stars Partytown Relocate resource intensive 3rd - party scripts off the main thread and into a web worker. Stars Figma / HTML Convert Figma designs to HTML, CSS, React, Vue and more! Stars Looking to hire a third party to help with your project? Submit a project request and our partnerships team will reach out to connect you with an Expert from our partner ecosystem. Connect with us Was this article helpful? 😞 😐 😃 Get the latest from Builder.io Developer Newsletter Latest tips, tricks, and news for frontend developers from our blog Product Newsletter Latest features and updates on the Builder.io platform By submitting, you agree to our Privacy Policy PRODUCT Visual Copilot Beta Visual Headless CMS Integrations What's New COMPANY About Careers DEVELOPERS Builder for Developers Documentation Devtools Try Builder Playground OPEN SOURCE Builder Mitosis Qwik Partytown SOLUTIONS Ecommerce Marketing Sites Landing Pages Mobile Apps Multi-brand Headless CMS POPULAR GUIDES SaaS Marketing Site Ebook Composable Commerce Ebook Headless CMS Guide Headless Commerce Guide Design to Code RESOURCES Blog Knowledge Base Community Forum Partners Performance Insights Templates Success Stories Showcase Demo Library CMS > FRAMEWORKS React Next.js Qwik Gatsby Angular Vue Svelte Remix Nuxt Hydrogen Visually build and optimize digital experiences on any tech stack. No coding required, and developer approved. Get Started Log In © 2024 Builder.io, Inc. Security Privacy Policy SaaS Terms"
  }
]